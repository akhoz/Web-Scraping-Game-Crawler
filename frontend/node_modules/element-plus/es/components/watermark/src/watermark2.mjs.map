{"version":3,"file":"watermark2.mjs","sources":["../../../../../../packages/components/watermark/src/watermark.vue"],"sourcesContent":["<template>\n  <div ref=\"containerRef\" :style=\"[style]\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport { useMutationObserver } from '@vueuse/core'\nimport { watermarkProps } from './watermark'\nimport { getPixelRatio, getStyleStr, reRendering } from './utils'\nimport useClips, { FontGap } from './useClips'\nimport type { WatermarkProps } from './watermark'\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElWatermark',\n})\n\nconst style: CSSProperties = {\n  position: 'relative',\n}\n\nconst props = defineProps(watermarkProps)\nconst color = computed(() => props.font?.color ?? 'rgba(0,0,0,.15)')\nconst fontSize = computed(() => props.font?.fontSize ?? 16)\nconst fontWeight = computed(() => props.font?.fontWeight ?? 'normal')\nconst fontStyle = computed(() => props.font?.fontStyle ?? 'normal')\nconst fontFamily = computed(() => props.font?.fontFamily ?? 'sans-serif')\n\nconst gapX = computed(() => props.gap[0])\nconst gapY = computed(() => props.gap[1])\nconst gapXCenter = computed(() => gapX.value / 2)\nconst gapYCenter = computed(() => gapY.value / 2)\nconst offsetLeft = computed(() => props.offset?.[0] ?? gapXCenter.value)\nconst offsetTop = computed(() => props.offset?.[1] ?? gapYCenter.value)\n\nconst getMarkStyle = () => {\n  const markStyle: CSSProperties = {\n    zIndex: props.zIndex,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    pointerEvents: 'none',\n    backgroundRepeat: 'repeat',\n  }\n\n  /** Calculate the style of the offset */\n  let positionLeft = offsetLeft.value - gapXCenter.value\n  let positionTop = offsetTop.value - gapYCenter.value\n  if (positionLeft > 0) {\n    markStyle.left = `${positionLeft}px`\n    markStyle.width = `calc(100% - ${positionLeft}px)`\n    positionLeft = 0\n  }\n  if (positionTop > 0) {\n    markStyle.top = `${positionTop}px`\n    markStyle.height = `calc(100% - ${positionTop}px)`\n    positionTop = 0\n  }\n  markStyle.backgroundPosition = `${positionLeft}px ${positionTop}px`\n\n  return markStyle\n}\n\nconst containerRef = shallowRef<HTMLDivElement | null>(null)\nconst watermarkRef = shallowRef<HTMLDivElement>()\nconst stopObservation = ref(false)\n\nconst destroyWatermark = () => {\n  if (watermarkRef.value) {\n    watermarkRef.value.remove()\n    watermarkRef.value = undefined\n  }\n}\nconst appendWatermark = (base64Url: string, markWidth: number) => {\n  if (containerRef.value && watermarkRef.value) {\n    stopObservation.value = true\n    watermarkRef.value.setAttribute(\n      'style',\n      getStyleStr({\n        ...getMarkStyle(),\n        backgroundImage: `url('${base64Url}')`,\n        backgroundSize: `${Math.floor(markWidth)}px`,\n      })\n    )\n    containerRef.value?.append(watermarkRef.value)\n    // Delayed execution\n    setTimeout(() => {\n      stopObservation.value = false\n    })\n  }\n}\n\n/**\n * Get the width and height of the watermark. The default values are as follows\n * Image: [120, 64]; Content: It's calculated by content;\n */\nconst getMarkSize = (ctx: CanvasRenderingContext2D) => {\n  let defaultWidth = 120\n  let defaultHeight = 64\n  const image = props.image\n  const content = props.content\n  const width = props.width\n  const height = props.height\n  if (!image && ctx.measureText) {\n    ctx.font = `${Number(fontSize.value)}px ${fontFamily.value}`\n    const contents = Array.isArray(content) ? content : [content]\n    const sizes = contents.map((item) => {\n      const metrics = ctx.measureText(item!)\n\n      return [\n        metrics.width,\n        metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent,\n      ]\n    })\n    defaultWidth = Math.ceil(Math.max(...sizes.map((size) => size[0])))\n    defaultHeight =\n      Math.ceil(Math.max(...sizes.map((size) => size[1]))) * contents.length +\n      (contents.length - 1) * FontGap\n  }\n  return [width ?? defaultWidth, height ?? defaultHeight] as const\n}\n\nconst getClips = useClips()\n\nconst renderWatermark = () => {\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n  const image = props.image\n  const content = props.content\n  const rotate = props.rotate\n\n  if (ctx) {\n    if (!watermarkRef.value) {\n      watermarkRef.value = document.createElement('div')\n    }\n\n    const ratio = getPixelRatio()\n    const [markWidth, markHeight] = getMarkSize(ctx)\n\n    const drawCanvas = (\n      drawContent?: NonNullable<WatermarkProps['content']> | HTMLImageElement\n    ) => {\n      const [textClips, clipWidth] = getClips(\n        drawContent || '',\n        rotate,\n        ratio,\n        markWidth,\n        markHeight,\n        {\n          color: color.value,\n          fontSize: fontSize.value,\n          fontStyle: fontStyle.value,\n          fontWeight: fontWeight.value,\n          fontFamily: fontFamily.value,\n        },\n        gapX.value,\n        gapY.value\n      )\n\n      appendWatermark(textClips, clipWidth)\n    }\n\n    if (image) {\n      const img = new Image()\n      img.onload = () => {\n        drawCanvas(img)\n      }\n      img.onerror = () => {\n        drawCanvas(content)\n      }\n      img.crossOrigin = 'anonymous'\n      img.referrerPolicy = 'no-referrer'\n      img.src = image\n    } else {\n      drawCanvas(content)\n    }\n  }\n}\n\nonMounted(() => {\n  renderWatermark()\n})\n\nwatch(\n  () => props,\n  () => {\n    renderWatermark()\n  },\n  {\n    deep: true,\n    flush: 'post',\n  }\n)\n\nonBeforeUnmount(() => {\n  destroyWatermark()\n})\n\nconst onMutate = (mutations: MutationRecord[]) => {\n  if (stopObservation.value) {\n    return\n  }\n  mutations.forEach((mutation) => {\n    if (reRendering(mutation, watermarkRef.value)) {\n      destroyWatermark()\n      renderWatermark()\n    }\n  })\n}\n\nuseMutationObserver(containerRef, onMutate, {\n  attributes: true,\n})\n</script>\n"],"names":[],"mappings":"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"}