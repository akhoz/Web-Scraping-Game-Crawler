{"ast":null,"code":"import { defineComponent, ref, computed, watch, nextTick, provide, reactive, onMounted, onUpdated, openBlock, createElementBlock, normalizeClass, unref, createElementVNode, normalizeStyle, createBlock, resolveDynamicComponent, withCtx, renderSlot, createCommentVNode } from 'vue';\nimport { useResizeObserver, useEventListener } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { GAP } from './util.mjs';\nimport Bar from './bar2.mjs';\nimport { scrollbarContextKey } from './constants.mjs';\nimport { scrollbarProps, scrollbarEmits } from './scrollbar.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\nimport { isObject } from '@vue/shared';\nimport { isNumber } from '../../../utils/types.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nconst COMPONENT_NAME = \"ElScrollbar\";\nconst __default__ = defineComponent({\n  name: COMPONENT_NAME\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: scrollbarProps,\n  emits: scrollbarEmits,\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const ns = useNamespace(\"scrollbar\");\n    let stopResizeObserver = void 0;\n    let stopResizeListener = void 0;\n    const scrollbarRef = ref();\n    const wrapRef = ref();\n    const resizeRef = ref();\n    const sizeWidth = ref(\"0\");\n    const sizeHeight = ref(\"0\");\n    const barRef = ref();\n    const ratioY = ref(1);\n    const ratioX = ref(1);\n    const wrapStyle = computed(() => {\n      const style = {};\n      if (props.height) style.height = addUnit(props.height);\n      if (props.maxHeight) style.maxHeight = addUnit(props.maxHeight);\n      return [props.wrapStyle, style];\n    });\n    const wrapKls = computed(() => {\n      return [props.wrapClass, ns.e(\"wrap\"), {\n        [ns.em(\"wrap\", \"hidden-default\")]: !props.native\n      }];\n    });\n    const resizeKls = computed(() => {\n      return [ns.e(\"view\"), props.viewClass];\n    });\n    const handleScroll = () => {\n      var _a;\n      if (wrapRef.value) {\n        (_a = barRef.value) == null ? void 0 : _a.handleScroll(wrapRef.value);\n        emit(\"scroll\", {\n          scrollTop: wrapRef.value.scrollTop,\n          scrollLeft: wrapRef.value.scrollLeft\n        });\n      }\n    };\n    function scrollTo(arg1, arg2) {\n      if (isObject(arg1)) {\n        wrapRef.value.scrollTo(arg1);\n      } else if (isNumber(arg1) && isNumber(arg2)) {\n        wrapRef.value.scrollTo(arg1, arg2);\n      }\n    }\n    const setScrollTop = value => {\n      if (!isNumber(value)) {\n        debugWarn(COMPONENT_NAME, \"value must be a number\");\n        return;\n      }\n      wrapRef.value.scrollTop = value;\n    };\n    const setScrollLeft = value => {\n      if (!isNumber(value)) {\n        debugWarn(COMPONENT_NAME, \"value must be a number\");\n        return;\n      }\n      wrapRef.value.scrollLeft = value;\n    };\n    const update = () => {\n      if (!wrapRef.value) return;\n      const offsetHeight = wrapRef.value.offsetHeight - GAP;\n      const offsetWidth = wrapRef.value.offsetWidth - GAP;\n      const originalHeight = offsetHeight ** 2 / wrapRef.value.scrollHeight;\n      const originalWidth = offsetWidth ** 2 / wrapRef.value.scrollWidth;\n      const height = Math.max(originalHeight, props.minSize);\n      const width = Math.max(originalWidth, props.minSize);\n      ratioY.value = originalHeight / (offsetHeight - originalHeight) / (height / (offsetHeight - height));\n      ratioX.value = originalWidth / (offsetWidth - originalWidth) / (width / (offsetWidth - width));\n      sizeHeight.value = height + GAP < offsetHeight ? `${height}px` : \"\";\n      sizeWidth.value = width + GAP < offsetWidth ? `${width}px` : \"\";\n    };\n    watch(() => props.noresize, noresize => {\n      if (noresize) {\n        stopResizeObserver == null ? void 0 : stopResizeObserver();\n        stopResizeListener == null ? void 0 : stopResizeListener();\n      } else {\n        ;\n        ({\n          stop: stopResizeObserver\n        } = useResizeObserver(resizeRef, update));\n        stopResizeListener = useEventListener(\"resize\", update);\n      }\n    }, {\n      immediate: true\n    });\n    watch(() => [props.maxHeight, props.height], () => {\n      if (!props.native) nextTick(() => {\n        var _a;\n        update();\n        if (wrapRef.value) {\n          (_a = barRef.value) == null ? void 0 : _a.handleScroll(wrapRef.value);\n        }\n      });\n    });\n    provide(scrollbarContextKey, reactive({\n      scrollbarElement: scrollbarRef,\n      wrapElement: wrapRef\n    }));\n    onMounted(() => {\n      if (!props.native) nextTick(() => {\n        update();\n      });\n    });\n    onUpdated(() => update());\n    expose({\n      wrapRef,\n      update,\n      scrollTo,\n      setScrollTop,\n      setScrollLeft,\n      handleScroll\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"scrollbarRef\",\n        ref: scrollbarRef,\n        class: normalizeClass(unref(ns).b())\n      }, [createElementVNode(\"div\", {\n        ref_key: \"wrapRef\",\n        ref: wrapRef,\n        class: normalizeClass(unref(wrapKls)),\n        style: normalizeStyle(unref(wrapStyle)),\n        onScroll: handleScroll\n      }, [(openBlock(), createBlock(resolveDynamicComponent(_ctx.tag), {\n        id: _ctx.id,\n        ref_key: \"resizeRef\",\n        ref: resizeRef,\n        class: normalizeClass(unref(resizeKls)),\n        style: normalizeStyle(_ctx.viewStyle),\n        role: _ctx.role,\n        \"aria-label\": _ctx.ariaLabel,\n        \"aria-orientation\": _ctx.ariaOrientation\n      }, {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 8, [\"id\", \"class\", \"style\", \"role\", \"aria-label\", \"aria-orientation\"]))], 38), !_ctx.native ? (openBlock(), createBlock(Bar, {\n        key: 0,\n        ref_key: \"barRef\",\n        ref: barRef,\n        height: sizeHeight.value,\n        width: sizeWidth.value,\n        always: _ctx.always,\n        \"ratio-x\": ratioX.value,\n        \"ratio-y\": ratioY.value\n      }, null, 8, [\"height\", \"width\", \"always\", \"ratio-x\", \"ratio-y\"])) : createCommentVNode(\"v-if\", true)], 2);\n    };\n  }\n});\nvar Scrollbar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/scrollbar/src/scrollbar.vue\"]]);\nexport { Scrollbar as default };","map":{"version":3,"names":["name","COMPONENT_NAME","ns","useNamespace","stopResizeObserver","stopResizeListener","scrollbarRef","ref","wrapRef","resizeRef","sizeWidth","sizeHeight","barRef","ratioY","ratioX","wrapStyle","computed","style","props","height","addUnit","maxHeight","wrapKls","wrapClass","e","em","native","resizeKls","viewClass","handleScroll","_a","value","emit","scrollTop","scrollLeft","scrollTo","arg1","arg2","isObject","isNumber","setScrollTop","debugWarn","setScrollLeft","update","offsetHeight","GAP","offsetWidth","originalHeight","scrollHeight","originalWidth","scrollWidth","Math","max","minSize","width","watch","noresize","stop","useResizeObserver","useEventListener","immediate","nextTick","provide","scrollbarContextKey","reactive","scrollbarElement","wrapElement","onMounted","onUpdated","expose"],"sources":["../../../../../../packages/components/scrollbar/src/scrollbar.vue"],"sourcesContent":["<template>\n  <div ref=\"scrollbarRef\" :class=\"ns.b()\">\n    <div\n      ref=\"wrapRef\"\n      :class=\"wrapKls\"\n      :style=\"wrapStyle\"\n      @scroll=\"handleScroll\"\n    >\n      <component\n        :is=\"tag\"\n        :id=\"id\"\n        ref=\"resizeRef\"\n        :class=\"resizeKls\"\n        :style=\"viewStyle\"\n        :role=\"role\"\n        :aria-label=\"ariaLabel\"\n        :aria-orientation=\"ariaOrientation\"\n      >\n        <slot />\n      </component>\n    </div>\n    <template v-if=\"!native\">\n      <bar\n        ref=\"barRef\"\n        :height=\"sizeHeight\"\n        :width=\"sizeWidth\"\n        :always=\"always\"\n        :ratio-x=\"ratioX\"\n        :ratio-y=\"ratioY\"\n      />\n    </template>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  nextTick,\n  onMounted,\n  onUpdated,\n  provide,\n  reactive,\n  ref,\n  watch,\n} from 'vue'\nimport { useEventListener, useResizeObserver } from '@vueuse/core'\nimport { addUnit, debugWarn, isNumber, isObject } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { GAP } from './util'\nimport Bar from './bar.vue'\nimport { scrollbarContextKey } from './constants'\nimport { scrollbarEmits, scrollbarProps } from './scrollbar'\nimport type { BarInstance } from './bar'\nimport type { CSSProperties, StyleValue } from 'vue'\n\nconst COMPONENT_NAME = 'ElScrollbar'\n\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\nconst props = defineProps(scrollbarProps)\nconst emit = defineEmits(scrollbarEmits)\n\nconst ns = useNamespace('scrollbar')\n\nlet stopResizeObserver: (() => void) | undefined = undefined\nlet stopResizeListener: (() => void) | undefined = undefined\n\nconst scrollbarRef = ref<HTMLDivElement>()\nconst wrapRef = ref<HTMLDivElement>()\nconst resizeRef = ref<HTMLElement>()\n\nconst sizeWidth = ref('0')\nconst sizeHeight = ref('0')\nconst barRef = ref<BarInstance>()\nconst ratioY = ref(1)\nconst ratioX = ref(1)\n\nconst wrapStyle = computed<StyleValue>(() => {\n  const style: CSSProperties = {}\n  if (props.height) style.height = addUnit(props.height)\n  if (props.maxHeight) style.maxHeight = addUnit(props.maxHeight)\n  return [props.wrapStyle, style]\n})\n\nconst wrapKls = computed(() => {\n  return [\n    props.wrapClass,\n    ns.e('wrap'),\n    { [ns.em('wrap', 'hidden-default')]: !props.native },\n  ]\n})\n\nconst resizeKls = computed(() => {\n  return [ns.e('view'), props.viewClass]\n})\n\nconst handleScroll = () => {\n  if (wrapRef.value) {\n    barRef.value?.handleScroll(wrapRef.value)\n\n    emit('scroll', {\n      scrollTop: wrapRef.value.scrollTop,\n      scrollLeft: wrapRef.value.scrollLeft,\n    })\n  }\n}\n\n// TODO: refactor method overrides, due to script setup dts\n// @ts-nocheck\nfunction scrollTo(xCord: number, yCord?: number): void\nfunction scrollTo(options: ScrollToOptions): void\nfunction scrollTo(arg1: unknown, arg2?: number) {\n  if (isObject(arg1)) {\n    wrapRef.value!.scrollTo(arg1)\n  } else if (isNumber(arg1) && isNumber(arg2)) {\n    wrapRef.value!.scrollTo(arg1, arg2)\n  }\n}\n\nconst setScrollTop = (value: number) => {\n  if (!isNumber(value)) {\n    debugWarn(COMPONENT_NAME, 'value must be a number')\n    return\n  }\n  wrapRef.value!.scrollTop = value\n}\n\nconst setScrollLeft = (value: number) => {\n  if (!isNumber(value)) {\n    debugWarn(COMPONENT_NAME, 'value must be a number')\n    return\n  }\n  wrapRef.value!.scrollLeft = value\n}\n\nconst update = () => {\n  if (!wrapRef.value) return\n  const offsetHeight = wrapRef.value.offsetHeight - GAP\n  const offsetWidth = wrapRef.value.offsetWidth - GAP\n\n  const originalHeight = offsetHeight ** 2 / wrapRef.value.scrollHeight\n  const originalWidth = offsetWidth ** 2 / wrapRef.value.scrollWidth\n  const height = Math.max(originalHeight, props.minSize)\n  const width = Math.max(originalWidth, props.minSize)\n\n  ratioY.value =\n    originalHeight /\n    (offsetHeight - originalHeight) /\n    (height / (offsetHeight - height))\n  ratioX.value =\n    originalWidth /\n    (offsetWidth - originalWidth) /\n    (width / (offsetWidth - width))\n\n  sizeHeight.value = height + GAP < offsetHeight ? `${height}px` : ''\n  sizeWidth.value = width + GAP < offsetWidth ? `${width}px` : ''\n}\n\nwatch(\n  () => props.noresize,\n  (noresize) => {\n    if (noresize) {\n      stopResizeObserver?.()\n      stopResizeListener?.()\n    } else {\n      ;({ stop: stopResizeObserver } = useResizeObserver(resizeRef, update))\n      stopResizeListener = useEventListener('resize', update)\n    }\n  },\n  { immediate: true }\n)\n\nwatch(\n  () => [props.maxHeight, props.height],\n  () => {\n    if (!props.native)\n      nextTick(() => {\n        update()\n        if (wrapRef.value) {\n          barRef.value?.handleScroll(wrapRef.value)\n        }\n      })\n  }\n)\n\nprovide(\n  scrollbarContextKey,\n  reactive({\n    scrollbarElement: scrollbarRef,\n    wrapElement: wrapRef,\n  })\n)\n\nonMounted(() => {\n  if (!props.native)\n    nextTick(() => {\n      update()\n    })\n})\nonUpdated(() => update())\n\ndefineExpose({\n  /** @description scrollbar wrap ref */\n  wrapRef,\n  /** @description update scrollbar state manually */\n  update,\n  /** @description scrolls to a particular set of coordinates */\n  scrollTo,\n  /** @description set distance to scroll top */\n  setScrollTop,\n  /** @description set distance to scroll left */\n  setScrollLeft,\n  /** @description handle scroll event */\n  handleScroll,\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}