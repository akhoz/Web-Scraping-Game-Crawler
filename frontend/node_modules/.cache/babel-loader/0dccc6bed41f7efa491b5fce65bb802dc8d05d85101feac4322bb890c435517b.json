{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent, toRefs, computed, unref, provide, reactive, onMounted, nextTick, resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createVNode, withCtx, createElementVNode, normalizeStyle, createBlock, Transition, Fragment, renderList, toDisplayString, createCommentVNode, withKeys, vModelText, createSlots, resolveDynamicComponent, renderSlot, vShow } from 'vue';\nimport { useResizeObserver, isIOS } from '@vueuse/core';\nimport { placements } from '@popperjs/core';\nimport '../../../directives/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { ElInput } from '../../input/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport { ElTag } from '../../tag/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport { CircleClose, ArrowDown } from '@element-plus/icons-vue';\nimport Option from './option.mjs';\nimport ElSelectMenu from './select-dropdown.mjs';\nimport { useSelectStates, useSelect } from './useSelect.mjs';\nimport { selectKey } from './token.mjs';\nimport ElOptions from './options.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { isValidComponentSize } from '../../../utils/vue/validator.mjs';\nimport { useTooltipContentProps } from '../../tooltip/src/content.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nimport { tagProps } from '../../tag/src/tag.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useId } from '../../../hooks/use-id/index.mjs';\nconst COMPONENT_NAME = \"ElSelect\";\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  componentName: COMPONENT_NAME,\n  components: {\n    ElInput,\n    ElSelectMenu,\n    ElOption: Option,\n    ElOptions,\n    ElTag,\n    ElScrollbar,\n    ElTooltip,\n    ElIcon\n  },\n  directives: {\n    ClickOutside\n  },\n  props: {\n    name: String,\n    id: String,\n    modelValue: {\n      type: [Array, String, Number, Boolean, Object],\n      default: void 0\n    },\n    autocomplete: {\n      type: String,\n      default: \"off\"\n    },\n    automaticDropdown: Boolean,\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    effect: {\n      type: String,\n      default: \"light\"\n    },\n    disabled: Boolean,\n    clearable: Boolean,\n    filterable: Boolean,\n    allowCreate: Boolean,\n    loading: Boolean,\n    popperClass: {\n      type: String,\n      default: \"\"\n    },\n    popperOptions: {\n      type: Object,\n      default: () => ({})\n    },\n    remote: Boolean,\n    loadingText: String,\n    noMatchText: String,\n    noDataText: String,\n    remoteMethod: Function,\n    filterMethod: Function,\n    multiple: Boolean,\n    multipleLimit: {\n      type: Number,\n      default: 0\n    },\n    placeholder: {\n      type: String\n    },\n    defaultFirstOption: Boolean,\n    reserveKeyword: {\n      type: Boolean,\n      default: true\n    },\n    valueKey: {\n      type: String,\n      default: \"value\"\n    },\n    collapseTags: Boolean,\n    collapseTagsTooltip: Boolean,\n    maxCollapseTags: {\n      type: Number,\n      default: 1\n    },\n    teleported: useTooltipContentProps.teleported,\n    persistent: {\n      type: Boolean,\n      default: true\n    },\n    clearIcon: {\n      type: iconPropType,\n      default: CircleClose\n    },\n    fitInputWidth: Boolean,\n    suffixIcon: {\n      type: iconPropType,\n      default: ArrowDown\n    },\n    tagType: {\n      ...tagProps.type,\n      default: \"info\"\n    },\n    validateEvent: {\n      type: Boolean,\n      default: true\n    },\n    remoteShowSuffix: Boolean,\n    suffixTransition: {\n      type: Boolean,\n      default: true\n    },\n    placement: {\n      type: String,\n      values: placements,\n      default: \"bottom-start\"\n    },\n    ariaLabel: {\n      type: String,\n      default: void 0\n    }\n  },\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"remove-tag\", \"clear\", \"visible-change\", \"focus\", \"blur\"],\n  setup(props, ctx) {\n    const nsSelect = useNamespace(\"select\");\n    const nsInput = useNamespace(\"input\");\n    const {\n      t\n    } = useLocale();\n    const contentId = useId();\n    const states = useSelectStates(props);\n    const {\n      optionList,\n      optionsArray,\n      hoverOption,\n      selectSize,\n      readonly,\n      handleResize,\n      collapseTagSize,\n      debouncedOnInputChange,\n      debouncedQueryChange,\n      deletePrevTag,\n      deleteTag,\n      deleteSelected,\n      handleOptionSelect,\n      scrollToOption,\n      setSelected,\n      resetInputHeight,\n      managePlaceholder,\n      showClose,\n      selectDisabled,\n      iconComponent,\n      iconReverse,\n      showNewOption,\n      emptyText,\n      toggleLastOptionHitState,\n      resetInputState,\n      handleComposition,\n      onOptionCreate,\n      onOptionDestroy,\n      handleMenuEnter,\n      handleFocus,\n      focus,\n      blur,\n      handleBlur,\n      handleClearClick,\n      handleClose,\n      handleKeydownEscape,\n      toggleMenu,\n      selectOption,\n      getValueKey,\n      navigateOptions,\n      handleDeleteTooltipTag,\n      dropMenuVisible,\n      reference,\n      input,\n      iOSInput,\n      tooltipRef,\n      tagTooltipRef,\n      tags,\n      selectWrapper,\n      scrollbar,\n      queryChange,\n      groupQueryChange,\n      handleMouseEnter,\n      handleMouseLeave,\n      showTagList,\n      collapseTagList,\n      selectTagsStyle\n    } = useSelect(props, states, ctx);\n    const {\n      inputWidth,\n      selected,\n      inputLength,\n      filteredOptionsCount,\n      visible,\n      selectedLabel,\n      hoverIndex,\n      query,\n      inputHovering,\n      currentPlaceholder,\n      menuVisibleOnFocus,\n      isOnComposition,\n      options,\n      cachedOptions,\n      optionsCount,\n      prefixWidth\n    } = toRefs(states);\n    const wrapperKls = computed(() => {\n      const classList = [nsSelect.b()];\n      const _selectSize = unref(selectSize);\n      if (_selectSize) {\n        classList.push(nsSelect.m(_selectSize));\n      }\n      if (props.disabled) {\n        classList.push(nsSelect.m(\"disabled\"));\n      }\n      return classList;\n    });\n    const tagsKls = computed(() => [nsSelect.e(\"tags\"), nsSelect.is(\"disabled\", unref(selectDisabled))]);\n    const tagWrapperKls = computed(() => [nsSelect.b(\"tags-wrapper\"), {\n      \"has-prefix\": unref(prefixWidth) && unref(selected).length\n    }]);\n    const inputKls = computed(() => [nsSelect.e(\"input\"), nsSelect.is(unref(selectSize)), nsSelect.is(\"disabled\", unref(selectDisabled))]);\n    const iOSInputKls = computed(() => [nsSelect.e(\"input\"), nsSelect.is(unref(selectSize)), nsSelect.em(\"input\", \"iOS\")]);\n    const scrollbarKls = computed(() => [nsSelect.is(\"empty\", !props.allowCreate && Boolean(unref(query)) && unref(filteredOptionsCount) === 0)]);\n    const tagTextStyle = computed(() => {\n      const maxWidth = unref(inputWidth) > 123 ? unref(inputWidth) - 123 : unref(inputWidth) - 75;\n      return {\n        maxWidth: `${maxWidth}px`\n      };\n    });\n    const inputStyle = computed(() => ({\n      marginLeft: `${unref(prefixWidth)}px`,\n      flexGrow: 1,\n      width: `${unref(inputLength) / (unref(inputWidth) - 32)}%`,\n      maxWidth: `${unref(inputWidth) - 42}px`\n    }));\n    provide(selectKey, reactive({\n      props,\n      options,\n      optionsArray,\n      cachedOptions,\n      optionsCount,\n      filteredOptionsCount,\n      hoverIndex,\n      handleOptionSelect,\n      onOptionCreate,\n      onOptionDestroy,\n      selectWrapper,\n      selected,\n      setSelected,\n      queryChange,\n      groupQueryChange\n    }));\n    onMounted(() => {\n      states.cachedPlaceHolder = currentPlaceholder.value = props.placeholder || (() => t(\"el.select.placeholder\"));\n      if (props.multiple && Array.isArray(props.modelValue) && props.modelValue.length > 0) {\n        currentPlaceholder.value = \"\";\n      }\n      useResizeObserver(selectWrapper, handleResize);\n      if (props.remote && props.multiple) {\n        resetInputHeight();\n      }\n      nextTick(() => {\n        const refEl = reference.value && reference.value.$el;\n        if (!refEl) return;\n        inputWidth.value = refEl.getBoundingClientRect().width;\n        if (ctx.slots.prefix) {\n          const prefix = refEl.querySelector(`.${nsInput.e(\"prefix\")}`);\n          prefixWidth.value = Math.max(prefix.getBoundingClientRect().width + 11, 30);\n        }\n      });\n      setSelected();\n    });\n    if (props.multiple && !Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, []);\n    }\n    if (!props.multiple && Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, \"\");\n    }\n    const popperPaneRef = computed(() => {\n      var _a, _b;\n      return (_b = (_a = tooltipRef.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    const onOptionsRendered = v => {\n      optionList.value = v;\n    };\n    return {\n      isIOS,\n      onOptionsRendered,\n      prefixWidth,\n      selectSize,\n      readonly,\n      handleResize,\n      collapseTagSize,\n      debouncedOnInputChange,\n      debouncedQueryChange,\n      deletePrevTag,\n      deleteTag,\n      handleDeleteTooltipTag,\n      deleteSelected,\n      handleOptionSelect,\n      scrollToOption,\n      inputWidth,\n      selected,\n      inputLength,\n      filteredOptionsCount,\n      visible,\n      selectedLabel,\n      hoverIndex,\n      query,\n      inputHovering,\n      currentPlaceholder,\n      menuVisibleOnFocus,\n      isOnComposition,\n      options,\n      resetInputHeight,\n      managePlaceholder,\n      showClose,\n      selectDisabled,\n      iconComponent,\n      iconReverse,\n      showNewOption,\n      emptyText,\n      toggleLastOptionHitState,\n      resetInputState,\n      handleComposition,\n      handleMenuEnter,\n      handleFocus,\n      focus,\n      blur,\n      handleBlur,\n      handleClearClick,\n      handleClose,\n      handleKeydownEscape,\n      toggleMenu,\n      selectOption,\n      getValueKey,\n      navigateOptions,\n      dropMenuVisible,\n      reference,\n      input,\n      iOSInput,\n      tooltipRef,\n      popperPaneRef,\n      tags,\n      selectWrapper,\n      scrollbar,\n      wrapperKls,\n      tagsKls,\n      tagWrapperKls,\n      inputKls,\n      iOSInputKls,\n      scrollbarKls,\n      selectTagsStyle,\n      nsSelect,\n      tagTextStyle,\n      inputStyle,\n      handleMouseEnter,\n      handleMouseLeave,\n      showTagList,\n      collapseTagList,\n      tagTooltipRef,\n      contentId,\n      hoverOption\n    };\n  }\n});\nconst _hoisted_1 = [\"disabled\", \"autocomplete\", \"aria-activedescendant\", \"aria-controls\", \"aria-expanded\", \"aria-label\"];\nconst _hoisted_2 = [\"disabled\"];\nconst _hoisted_3 = {\n  style: {\n    \"height\": \"100%\",\n    \"display\": \"flex\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\"\n  }\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = resolveComponent(\"el-tag\");\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_input = resolveComponent(\"el-input\");\n  const _component_el_option = resolveComponent(\"el-option\");\n  const _component_el_options = resolveComponent(\"el-options\");\n  const _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n  const _component_el_select_menu = resolveComponent(\"el-select-menu\");\n  const _directive_click_outside = resolveDirective(\"click-outside\");\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"selectWrapper\",\n    class: normalizeClass(_ctx.wrapperKls),\n    onMouseenter: _cache[22] || (_cache[22] = (...args) => _ctx.handleMouseEnter && _ctx.handleMouseEnter(...args)),\n    onMouseleave: _cache[23] || (_cache[23] = (...args) => _ctx.handleMouseLeave && _ctx.handleMouseLeave(...args)),\n    onClick: _cache[24] || (_cache[24] = withModifiers((...args) => _ctx.toggleMenu && _ctx.toggleMenu(...args), [\"stop\"]))\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"tooltipRef\",\n    visible: _ctx.dropMenuVisible,\n    placement: _ctx.placement,\n    teleported: _ctx.teleported,\n    \"popper-class\": [_ctx.nsSelect.e(\"popper\"), _ctx.popperClass],\n    \"popper-options\": _ctx.popperOptions,\n    \"fallback-placements\": [\"bottom-start\", \"top-start\", \"right\", \"left\"],\n    effect: _ctx.effect,\n    pure: \"\",\n    trigger: \"click\",\n    transition: `${_ctx.nsSelect.namespace.value}-zoom-in-top`,\n    \"stop-popper-mouse-event\": false,\n    \"gpu-acceleration\": false,\n    persistent: _ctx.persistent,\n    onShow: _ctx.handleMenuEnter\n  }, {\n    default: withCtx(() => {\n      var _a, _b;\n      return [createElementVNode(\"div\", {\n        class: \"select-trigger\",\n        onMouseenter: _cache[20] || (_cache[20] = $event => _ctx.inputHovering = true),\n        onMouseleave: _cache[21] || (_cache[21] = $event => _ctx.inputHovering = false)\n      }, [_ctx.multiple ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        ref: \"tags\",\n        tabindex: \"-1\",\n        class: normalizeClass(_ctx.tagsKls),\n        style: normalizeStyle(_ctx.selectTagsStyle),\n        onClick: _cache[15] || (_cache[15] = (...args) => _ctx.focus && _ctx.focus(...args))\n      }, [_ctx.collapseTags && _ctx.selected.length ? (openBlock(), createBlock(Transition, {\n        key: 0,\n        onAfterLeave: _ctx.resetInputHeight\n      }, {\n        default: withCtx(() => [createElementVNode(\"span\", {\n          class: normalizeClass(_ctx.tagWrapperKls)\n        }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.showTagList, item => {\n          return openBlock(), createBlock(_component_el_tag, {\n            key: _ctx.getValueKey(item),\n            closable: !_ctx.selectDisabled && !item.isDisabled,\n            size: _ctx.collapseTagSize,\n            hit: item.hitState,\n            type: _ctx.tagType,\n            \"disable-transitions\": \"\",\n            onClose: $event => _ctx.deleteTag($event, item)\n          }, {\n            default: withCtx(() => [createElementVNode(\"span\", {\n              class: normalizeClass(_ctx.nsSelect.e(\"tags-text\")),\n              style: normalizeStyle(_ctx.tagTextStyle)\n            }, toDisplayString(item.currentLabel), 7)]),\n            _: 2\n          }, 1032, [\"closable\", \"size\", \"hit\", \"type\", \"onClose\"]);\n        }), 128)), _ctx.selected.length > _ctx.maxCollapseTags ? (openBlock(), createBlock(_component_el_tag, {\n          key: 0,\n          closable: false,\n          size: _ctx.collapseTagSize,\n          type: _ctx.tagType,\n          \"disable-transitions\": \"\"\n        }, {\n          default: withCtx(() => [_ctx.collapseTagsTooltip ? (openBlock(), createBlock(_component_el_tooltip, {\n            key: 0,\n            ref: \"tagTooltipRef\",\n            disabled: _ctx.dropMenuVisible,\n            \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n            effect: _ctx.effect,\n            placement: \"bottom\",\n            teleported: _ctx.teleported\n          }, {\n            default: withCtx(() => [createElementVNode(\"span\", {\n              class: normalizeClass(_ctx.nsSelect.e(\"tags-text\"))\n            }, \"+ \" + toDisplayString(_ctx.selected.length - _ctx.maxCollapseTags), 3)]),\n            content: withCtx(() => [createElementVNode(\"div\", {\n              class: normalizeClass(_ctx.nsSelect.e(\"collapse-tags\"))\n            }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.collapseTagList, item => {\n              return openBlock(), createElementBlock(\"div\", {\n                key: _ctx.getValueKey(item),\n                class: normalizeClass(_ctx.nsSelect.e(\"collapse-tag\"))\n              }, [createVNode(_component_el_tag, {\n                class: \"in-tooltip\",\n                closable: !_ctx.selectDisabled && !item.isDisabled,\n                size: _ctx.collapseTagSize,\n                hit: item.hitState,\n                type: _ctx.tagType,\n                \"disable-transitions\": \"\",\n                style: {\n                  margin: \"2px\"\n                },\n                onClose: $event => _ctx.handleDeleteTooltipTag($event, item)\n              }, {\n                default: withCtx(() => [createElementVNode(\"span\", {\n                  class: normalizeClass(_ctx.nsSelect.e(\"tags-text\")),\n                  style: normalizeStyle({\n                    maxWidth: _ctx.inputWidth - 75 + \"px\"\n                  })\n                }, toDisplayString(item.currentLabel), 7)]),\n                _: 2\n              }, 1032, [\"closable\", \"size\", \"hit\", \"type\", \"onClose\"])], 2);\n            }), 128))], 2)]),\n            _: 1\n          }, 8, [\"disabled\", \"effect\", \"teleported\"])) : (openBlock(), createElementBlock(\"span\", {\n            key: 1,\n            class: normalizeClass(_ctx.nsSelect.e(\"tags-text\"))\n          }, \"+ \" + toDisplayString(_ctx.selected.length - _ctx.maxCollapseTags), 3))]),\n          _: 1\n        }, 8, [\"size\", \"type\"])) : createCommentVNode(\"v-if\", true)], 2)]),\n        _: 1\n      }, 8, [\"onAfterLeave\"])) : createCommentVNode(\"v-if\", true), !_ctx.collapseTags ? (openBlock(), createBlock(Transition, {\n        key: 1,\n        onAfterLeave: _ctx.resetInputHeight\n      }, {\n        default: withCtx(() => [createElementVNode(\"span\", {\n          class: normalizeClass(_ctx.tagWrapperKls),\n          style: normalizeStyle(_ctx.prefixWidth && _ctx.selected.length ? {\n            marginLeft: `${_ctx.prefixWidth}px`\n          } : \"\")\n        }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.selected, item => {\n          return openBlock(), createBlock(_component_el_tag, {\n            key: _ctx.getValueKey(item),\n            closable: !_ctx.selectDisabled && !item.isDisabled,\n            size: _ctx.collapseTagSize,\n            hit: item.hitState,\n            type: _ctx.tagType,\n            \"disable-transitions\": \"\",\n            onClose: $event => _ctx.deleteTag($event, item)\n          }, {\n            default: withCtx(() => [createElementVNode(\"span\", {\n              class: normalizeClass(_ctx.nsSelect.e(\"tags-text\")),\n              style: normalizeStyle({\n                maxWidth: _ctx.inputWidth - 75 + \"px\"\n              })\n            }, toDisplayString(item.currentLabel), 7)]),\n            _: 2\n          }, 1032, [\"closable\", \"size\", \"hit\", \"type\", \"onClose\"]);\n        }), 128))], 6)]),\n        _: 1\n      }, 8, [\"onAfterLeave\"])) : createCommentVNode(\"v-if\", true), _ctx.filterable && !_ctx.selectDisabled ? withDirectives((openBlock(), createElementBlock(\"input\", {\n        key: 2,\n        ref: \"input\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.query = $event),\n        type: \"text\",\n        class: normalizeClass(_ctx.inputKls),\n        disabled: _ctx.selectDisabled,\n        autocomplete: _ctx.autocomplete,\n        style: normalizeStyle(_ctx.inputStyle),\n        role: \"combobox\",\n        \"aria-activedescendant\": ((_a = _ctx.hoverOption) == null ? void 0 : _a.id) || \"\",\n        \"aria-controls\": _ctx.contentId,\n        \"aria-expanded\": _ctx.dropMenuVisible,\n        \"aria-label\": _ctx.ariaLabel,\n        \"aria-autocomplete\": \"none\",\n        \"aria-haspopup\": \"listbox\",\n        onFocus: _cache[1] || (_cache[1] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n        onBlur: _cache[2] || (_cache[2] = (...args) => _ctx.handleBlur && _ctx.handleBlur(...args)),\n        onKeyup: _cache[3] || (_cache[3] = (...args) => _ctx.managePlaceholder && _ctx.managePlaceholder(...args)),\n        onKeydown: [_cache[4] || (_cache[4] = (...args) => _ctx.resetInputState && _ctx.resetInputState(...args)), _cache[5] || (_cache[5] = withKeys(withModifiers($event => _ctx.navigateOptions(\"next\"), [\"prevent\"]), [\"down\"])), _cache[6] || (_cache[6] = withKeys(withModifiers($event => _ctx.navigateOptions(\"prev\"), [\"prevent\"]), [\"up\"])), _cache[7] || (_cache[7] = withKeys((...args) => _ctx.handleKeydownEscape && _ctx.handleKeydownEscape(...args), [\"esc\"])), _cache[8] || (_cache[8] = withKeys(withModifiers((...args) => _ctx.selectOption && _ctx.selectOption(...args), [\"stop\", \"prevent\"]), [\"enter\"])), _cache[9] || (_cache[9] = withKeys((...args) => _ctx.deletePrevTag && _ctx.deletePrevTag(...args), [\"delete\"])), _cache[10] || (_cache[10] = withKeys($event => _ctx.visible = false, [\"tab\"]))],\n        onCompositionstart: _cache[11] || (_cache[11] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),\n        onCompositionupdate: _cache[12] || (_cache[12] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),\n        onCompositionend: _cache[13] || (_cache[13] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),\n        onInput: _cache[14] || (_cache[14] = (...args) => _ctx.debouncedQueryChange && _ctx.debouncedQueryChange(...args))\n      }, null, 46, _hoisted_1)), [[vModelText, _ctx.query]]) : createCommentVNode(\"v-if\", true)], 6)) : createCommentVNode(\"v-if\", true), _ctx.isIOS && !_ctx.multiple && _ctx.filterable && _ctx.readonly ? (openBlock(), createElementBlock(\"input\", {\n        key: 1,\n        ref: \"iOSInput\",\n        class: normalizeClass(_ctx.iOSInputKls),\n        disabled: _ctx.selectDisabled,\n        type: \"text\"\n      }, null, 10, _hoisted_2)) : createCommentVNode(\"v-if\", true), createVNode(_component_el_input, {\n        id: _ctx.id,\n        ref: \"reference\",\n        modelValue: _ctx.selectedLabel,\n        \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => _ctx.selectedLabel = $event),\n        type: \"text\",\n        placeholder: typeof _ctx.currentPlaceholder === \"function\" ? _ctx.currentPlaceholder() : _ctx.currentPlaceholder,\n        name: _ctx.name,\n        autocomplete: _ctx.autocomplete,\n        size: _ctx.selectSize,\n        disabled: _ctx.selectDisabled,\n        readonly: _ctx.readonly,\n        \"validate-event\": false,\n        class: normalizeClass([_ctx.nsSelect.is(\"focus\", _ctx.visible)]),\n        tabindex: _ctx.multiple && _ctx.filterable ? -1 : void 0,\n        role: \"combobox\",\n        \"aria-activedescendant\": ((_b = _ctx.hoverOption) == null ? void 0 : _b.id) || \"\",\n        \"aria-controls\": _ctx.contentId,\n        \"aria-expanded\": _ctx.dropMenuVisible,\n        label: _ctx.ariaLabel,\n        \"aria-autocomplete\": \"none\",\n        \"aria-haspopup\": \"listbox\",\n        onFocus: _ctx.handleFocus,\n        onBlur: _ctx.handleBlur,\n        onInput: _ctx.debouncedOnInputChange,\n        onPaste: _ctx.debouncedOnInputChange,\n        onCompositionstart: _ctx.handleComposition,\n        onCompositionupdate: _ctx.handleComposition,\n        onCompositionend: _ctx.handleComposition,\n        onKeydown: [_cache[17] || (_cache[17] = withKeys(withModifiers($event => _ctx.navigateOptions(\"next\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[18] || (_cache[18] = withKeys(withModifiers($event => _ctx.navigateOptions(\"prev\"), [\"stop\", \"prevent\"]), [\"up\"])), withKeys(withModifiers(_ctx.selectOption, [\"stop\", \"prevent\"]), [\"enter\"]), withKeys(_ctx.handleKeydownEscape, [\"esc\"]), _cache[19] || (_cache[19] = withKeys($event => _ctx.visible = false, [\"tab\"]))]\n      }, createSlots({\n        suffix: withCtx(() => [_ctx.iconComponent && !_ctx.showClose ? (openBlock(), createBlock(_component_el_icon, {\n          key: 0,\n          class: normalizeClass([_ctx.nsSelect.e(\"caret\"), _ctx.nsSelect.e(\"icon\"), _ctx.iconReverse])\n        }, {\n          default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n          _: 1\n        }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), _ctx.showClose && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n          key: 1,\n          class: normalizeClass([_ctx.nsSelect.e(\"caret\"), _ctx.nsSelect.e(\"icon\")]),\n          onClick: _ctx.handleClearClick\n        }, {\n          default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n          _: 1\n        }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)]),\n        _: 2\n      }, [_ctx.$slots.prefix ? {\n        name: \"prefix\",\n        fn: withCtx(() => [createElementVNode(\"div\", _hoisted_3, [renderSlot(_ctx.$slots, \"prefix\")])])\n      } : void 0]), 1032, [\"id\", \"modelValue\", \"placeholder\", \"name\", \"autocomplete\", \"size\", \"disabled\", \"readonly\", \"class\", \"tabindex\", \"aria-activedescendant\", \"aria-controls\", \"aria-expanded\", \"label\", \"onFocus\", \"onBlur\", \"onInput\", \"onPaste\", \"onCompositionstart\", \"onCompositionupdate\", \"onCompositionend\", \"onKeydown\"])], 32)];\n    }),\n    content: withCtx(() => [createVNode(_component_el_select_menu, null, {\n      default: withCtx(() => [withDirectives(createVNode(_component_el_scrollbar, {\n        id: _ctx.contentId,\n        ref: \"scrollbar\",\n        tag: \"ul\",\n        \"wrap-class\": _ctx.nsSelect.be(\"dropdown\", \"wrap\"),\n        \"view-class\": _ctx.nsSelect.be(\"dropdown\", \"list\"),\n        class: normalizeClass(_ctx.scrollbarKls),\n        role: \"listbox\",\n        \"aria-label\": _ctx.ariaLabel,\n        \"aria-orientation\": \"vertical\"\n      }, {\n        default: withCtx(() => [_ctx.showNewOption ? (openBlock(), createBlock(_component_el_option, {\n          key: 0,\n          value: _ctx.query,\n          created: true\n        }, null, 8, [\"value\"])) : createCommentVNode(\"v-if\", true), createVNode(_component_el_options, {\n          onUpdateOptions: _ctx.onOptionsRendered\n        }, {\n          default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n          _: 3\n        }, 8, [\"onUpdateOptions\"])]),\n        _: 3\n      }, 8, [\"id\", \"wrap-class\", \"view-class\", \"class\", \"aria-label\"]), [[vShow, _ctx.options.size > 0 && !_ctx.loading]]), _ctx.emptyText && (!_ctx.allowCreate || _ctx.loading || _ctx.allowCreate && _ctx.options.size === 0) ? (openBlock(), createElementBlock(Fragment, {\n        key: 0\n      }, [_ctx.$slots.empty ? renderSlot(_ctx.$slots, \"empty\", {\n        key: 0\n      }) : (openBlock(), createElementBlock(\"p\", {\n        key: 1,\n        class: normalizeClass(_ctx.nsSelect.be(\"dropdown\", \"empty\"))\n      }, toDisplayString(_ctx.emptyText), 3))], 64)) : createCommentVNode(\"v-if\", true)]),\n      _: 3\n    })]),\n    _: 3\n  }, 8, [\"visible\", \"placement\", \"teleported\", \"popper-class\", \"popper-options\", \"effect\", \"transition\", \"persistent\", \"onShow\"])], 34)), [[_directive_click_outside, _ctx.handleClose, _ctx.popperPaneRef]]);\n}\nvar Select = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/select/src/select.vue\"]]);\nexport { Select as default };","map":{"version":3,"names":["COMPONENT_NAME","_sfc_main","defineComponent","name","componentName","components","ElInput","ElSelectMenu","ElOption","Option","ElOptions","ElTag","ElScrollbar","ElTooltip","ElIcon","directives","ClickOutside","props","String","id","modelValue","type","Array","Number","Boolean","Object","default","autocomplete","automaticDropdown","size","validator","isValidComponentSize","effect","disabled","clearable","filterable","allowCreate","loading","popperClass","popperOptions","remote","loadingText","noMatchText","noDataText","remoteMethod","Function","filterMethod","multiple","multipleLimit","placeholder","defaultFirstOption","reserveKeyword","valueKey","collapseTags","collapseTagsTooltip","maxCollapseTags","teleported","useTooltipContentProps","persistent","clearIcon","iconPropType","CircleClose","fitInputWidth","suffixIcon","ArrowDown","tagType","tagProps","validateEvent","remoteShowSuffix","suffixTransition","placement","values","placements","ariaLabel","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","setup","ctx","nsSelect","useNamespace","nsInput","t","useLocale","contentId","useId","states","useSelectStates","optionList","optionsArray","hoverOption","selectSize","readonly","handleResize","collapseTagSize","debouncedOnInputChange","debouncedQueryChange","deletePrevTag","deleteTag","deleteSelected","handleOptionSelect","scrollToOption","setSelected","resetInputHeight","managePlaceholder","showClose","selectDisabled","iconComponent","iconReverse","showNewOption","emptyText","toggleLastOptionHitState","resetInputState","handleComposition","onOptionCreate","onOptionDestroy","handleMenuEnter","handleFocus","focus","blur","handleBlur","handleClearClick","handleClose","handleKeydownEscape","toggleMenu","selectOption","getValueKey","navigateOptions","handleDeleteTooltipTag","dropMenuVisible","reference","input","iOSInput","tooltipRef","tagTooltipRef","tags","selectWrapper","scrollbar","queryChange","groupQueryChange","handleMouseEnter","handleMouseLeave","showTagList","collapseTagList","selectTagsStyle","useSelect","inputWidth","selected","inputLength","filteredOptionsCount","visible","selectedLabel","hoverIndex","query","inputHovering","currentPlaceholder","menuVisibleOnFocus","isOnComposition","options","cachedOptions","optionsCount","prefixWidth","toRefs","wrapperKls","computed","classList","b","_selectSize","unref","push","m","tagsKls","e","is","tagWrapperKls","length","inputKls","iOSInputKls","em","scrollbarKls","tagTextStyle","maxWidth","inputStyle","marginLeft","flexGrow","width","provide","selectKey","reactive","onMounted","cachedPlaceHolder","value","isArray","useResizeObserver","nextTick","refEl","$el","getBoundingClientRect","slots","prefix","querySelector","Math","max","emit","popperPaneRef","_a","_b","popperRef","contentRef","onOptionsRendered","v","isIOS","withDirectives","openBlock","createElementBlock","ref","class","normalizeClass","_ctx","onMouseenter","_cache","args","onMouseleave","onClick","withModifiers","createVNode","_component_el_tooltip","pure","trigger","transition","namespace","onShow","withCtx","createElementVNode","$event","key","tabindex","style","normalizeStyle","createBlock","Transition","onAfterLeave","Fragment","renderList","item","_component_el_tag","closable","isDisabled","hit","hitState","onClose","_","toDisplayString","content","createCommentVNode","role","onFocus","onBlur","onKeyup","onKeydown","withKeys","onCompositionstart","onCompositionupdate","onInput","vModelText","_hoisted_2","_component_el_input","label","onPaste","onCompositionend","createSlots","suffix","_component_el_icon","$slots","fn","_component_el_select_menu","_component_el_scrollbar","tag","be","_component_el_option","created","vShow","empty","renderSlot"],"sources":["../../../../../../packages/components/select/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectWrapper\"\n    v-click-outside:[popperPaneRef]=\"handleClose\"\n    :class=\"wrapperKls\"\n    @mouseenter=\"handleMouseEnter\"\n    @mouseleave=\"handleMouseLeave\"\n    @click.stop=\"toggleMenu\"\n  >\n    <el-tooltip\n      ref=\"tooltipRef\"\n      :visible=\"dropMenuVisible\"\n      :placement=\"placement\"\n      :teleported=\"teleported\"\n      :popper-class=\"[nsSelect.e('popper'), popperClass]\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"['bottom-start', 'top-start', 'right', 'left']\"\n      :effect=\"effect\"\n      pure\n      trigger=\"click\"\n      :transition=\"`${nsSelect.namespace.value}-zoom-in-top`\"\n      :stop-popper-mouse-event=\"false\"\n      :gpu-acceleration=\"false\"\n      :persistent=\"persistent\"\n      @show=\"handleMenuEnter\"\n    >\n      <template #default>\n        <div\n          class=\"select-trigger\"\n          @mouseenter=\"inputHovering = true\"\n          @mouseleave=\"inputHovering = false\"\n        >\n          <div\n            v-if=\"multiple\"\n            ref=\"tags\"\n            tabindex=\"-1\"\n            :class=\"tagsKls\"\n            :style=\"selectTagsStyle\"\n            @click=\"focus\"\n          >\n            <transition\n              v-if=\"collapseTags && selected.length\"\n              @after-leave=\"resetInputHeight\"\n            >\n              <span :class=\"tagWrapperKls\">\n                <el-tag\n                  v-for=\"item in showTagList\"\n                  :key=\"getValueKey(item)\"\n                  :closable=\"!selectDisabled && !item.isDisabled\"\n                  :size=\"collapseTagSize\"\n                  :hit=\"item.hitState\"\n                  :type=\"tagType\"\n                  disable-transitions\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span :class=\"nsSelect.e('tags-text')\" :style=\"tagTextStyle\">\n                    {{ item.currentLabel }}\n                  </span>\n                </el-tag>\n                <el-tag\n                  v-if=\"selected.length > maxCollapseTags\"\n                  :closable=\"false\"\n                  :size=\"collapseTagSize\"\n                  :type=\"tagType\"\n                  disable-transitions\n                >\n                  <el-tooltip\n                    v-if=\"collapseTagsTooltip\"\n                    ref=\"tagTooltipRef\"\n                    :disabled=\"dropMenuVisible\"\n                    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                    :effect=\"effect\"\n                    placement=\"bottom\"\n                    :teleported=\"teleported\"\n                  >\n                    <template #default>\n                      <span :class=\"nsSelect.e('tags-text')\"\n                        >+ {{ selected.length - maxCollapseTags }}</span\n                      >\n                    </template>\n                    <template #content>\n                      <div :class=\"nsSelect.e('collapse-tags')\">\n                        <div\n                          v-for=\"item in collapseTagList\"\n                          :key=\"getValueKey(item)\"\n                          :class=\"nsSelect.e('collapse-tag')\"\n                        >\n                          <el-tag\n                            class=\"in-tooltip\"\n                            :closable=\"!selectDisabled && !item.isDisabled\"\n                            :size=\"collapseTagSize\"\n                            :hit=\"item.hitState\"\n                            :type=\"tagType\"\n                            disable-transitions\n                            :style=\"{ margin: '2px' }\"\n                            @close=\"handleDeleteTooltipTag($event, item)\"\n                          >\n                            <span\n                              :class=\"nsSelect.e('tags-text')\"\n                              :style=\"{\n                                maxWidth: inputWidth - 75 + 'px',\n                              }\"\n                              >{{ item.currentLabel }}</span\n                            >\n                          </el-tag>\n                        </div>\n                      </div>\n                    </template>\n                  </el-tooltip>\n                  <span v-else :class=\"nsSelect.e('tags-text')\"\n                    >+ {{ selected.length - maxCollapseTags }}</span\n                  >\n                </el-tag>\n              </span>\n            </transition>\n            <transition v-if=\"!collapseTags\" @after-leave=\"resetInputHeight\">\n              <span\n                :class=\"tagWrapperKls\"\n                :style=\"\n                  prefixWidth && selected.length\n                    ? { marginLeft: `${prefixWidth}px` }\n                    : ''\n                \"\n              >\n                <el-tag\n                  v-for=\"item in selected\"\n                  :key=\"getValueKey(item)\"\n                  :closable=\"!selectDisabled && !item.isDisabled\"\n                  :size=\"collapseTagSize\"\n                  :hit=\"item.hitState\"\n                  :type=\"tagType\"\n                  disable-transitions\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span\n                    :class=\"nsSelect.e('tags-text')\"\n                    :style=\"{ maxWidth: inputWidth - 75 + 'px' }\"\n                    >{{ item.currentLabel }}</span\n                  >\n                </el-tag>\n              </span>\n            </transition>\n            <input\n              v-if=\"filterable && !selectDisabled\"\n              ref=\"input\"\n              v-model=\"query\"\n              type=\"text\"\n              :class=\"inputKls\"\n              :disabled=\"selectDisabled\"\n              :autocomplete=\"autocomplete\"\n              :style=\"inputStyle\"\n              role=\"combobox\"\n              :aria-activedescendant=\"hoverOption?.id || ''\"\n              :aria-controls=\"contentId\"\n              :aria-expanded=\"dropMenuVisible\"\n              :aria-label=\"ariaLabel\"\n              aria-autocomplete=\"none\"\n              aria-haspopup=\"listbox\"\n              @focus=\"handleFocus\"\n              @blur=\"handleBlur\"\n              @keyup=\"managePlaceholder\"\n              @keydown=\"resetInputState\"\n              @keydown.down.prevent=\"navigateOptions('next')\"\n              @keydown.up.prevent=\"navigateOptions('prev')\"\n              @keydown.esc=\"handleKeydownEscape\"\n              @keydown.enter.stop.prevent=\"selectOption\"\n              @keydown.delete=\"deletePrevTag\"\n              @keydown.tab=\"visible = false\"\n              @compositionstart=\"handleComposition\"\n              @compositionupdate=\"handleComposition\"\n              @compositionend=\"handleComposition\"\n              @input=\"debouncedQueryChange\"\n            />\n          </div>\n          <input\n            v-if=\"isIOS && !multiple && filterable && readonly\"\n            ref=\"iOSInput\"\n            :class=\"iOSInputKls\"\n            :disabled=\"selectDisabled\"\n            type=\"text\"\n          />\n          <el-input\n            :id=\"id\"\n            ref=\"reference\"\n            v-model=\"selectedLabel\"\n            type=\"text\"\n            :placeholder=\"\n              typeof currentPlaceholder === 'function'\n                ? currentPlaceholder()\n                : currentPlaceholder\n            \"\n            :name=\"name\"\n            :autocomplete=\"autocomplete\"\n            :size=\"selectSize\"\n            :disabled=\"selectDisabled\"\n            :readonly=\"readonly\"\n            :validate-event=\"false\"\n            :class=\"[nsSelect.is('focus', visible)]\"\n            :tabindex=\"multiple && filterable ? -1 : undefined\"\n            role=\"combobox\"\n            :aria-activedescendant=\"hoverOption?.id || ''\"\n            :aria-controls=\"contentId\"\n            :aria-expanded=\"dropMenuVisible\"\n            :label=\"ariaLabel\"\n            aria-autocomplete=\"none\"\n            aria-haspopup=\"listbox\"\n            @focus=\"handleFocus\"\n            @blur=\"handleBlur\"\n            @input=\"debouncedOnInputChange\"\n            @paste=\"debouncedOnInputChange\"\n            @compositionstart=\"handleComposition\"\n            @compositionupdate=\"handleComposition\"\n            @compositionend=\"handleComposition\"\n            @keydown.down.stop.prevent=\"navigateOptions('next')\"\n            @keydown.up.stop.prevent=\"navigateOptions('prev')\"\n            @keydown.enter.stop.prevent=\"selectOption\"\n            @keydown.esc=\"handleKeydownEscape\"\n            @keydown.tab=\"visible = false\"\n          >\n            <template v-if=\"$slots.prefix\" #prefix>\n              <div\n                style=\"\n                  height: 100%;\n                  display: flex;\n                  justify-content: center;\n                  align-items: center;\n                \"\n              >\n                <slot name=\"prefix\" />\n              </div>\n            </template>\n            <template #suffix>\n              <el-icon\n                v-if=\"iconComponent && !showClose\"\n                :class=\"[nsSelect.e('caret'), nsSelect.e('icon'), iconReverse]\"\n              >\n                <component :is=\"iconComponent\" />\n              </el-icon>\n              <el-icon\n                v-if=\"showClose && clearIcon\"\n                :class=\"[nsSelect.e('caret'), nsSelect.e('icon')]\"\n                @click=\"handleClearClick\"\n              >\n                <component :is=\"clearIcon\" />\n              </el-icon>\n            </template>\n          </el-input>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu>\n          <el-scrollbar\n            v-show=\"options.size > 0 && !loading\"\n            :id=\"contentId\"\n            ref=\"scrollbar\"\n            tag=\"ul\"\n            :wrap-class=\"nsSelect.be('dropdown', 'wrap')\"\n            :view-class=\"nsSelect.be('dropdown', 'list')\"\n            :class=\"scrollbarKls\"\n            role=\"listbox\"\n            :aria-label=\"ariaLabel\"\n            aria-orientation=\"vertical\"\n          >\n            <el-option v-if=\"showNewOption\" :value=\"query\" :created=\"true\" />\n            <el-options @update-options=\"onOptionsRendered\">\n              <slot />\n            </el-options>\n          </el-scrollbar>\n          <template\n            v-if=\"\n              emptyText &&\n              (!allowCreate || loading || (allowCreate && options.size === 0))\n            \"\n          >\n            <slot v-if=\"$slots.empty\" name=\"empty\" />\n            <p v-else :class=\"nsSelect.be('dropdown', 'empty')\">\n              {{ emptyText }}\n            </p>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  nextTick,\n  onMounted,\n  provide,\n  reactive,\n  toRefs,\n  unref,\n} from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\nimport { placements } from '@popperjs/core'\nimport { ClickOutside } from '@element-plus/directives'\nimport { useId, useLocale, useNamespace } from '@element-plus/hooks'\nimport ElInput from '@element-plus/components/input'\nimport ElTooltip, {\n  useTooltipContentProps,\n} from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTag, { tagProps } from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { iconPropType, isIOS, isValidComponentSize } from '@element-plus/utils'\nimport { ArrowDown, CircleClose } from '@element-plus/icons-vue'\nimport ElOption from './option.vue'\nimport ElSelectMenu from './select-dropdown.vue'\nimport { useSelect, useSelectStates } from './useSelect'\nimport { selectKey } from './token'\nimport ElOptions from './options'\n\nimport type { PropType } from 'vue'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type { SelectContext } from './token'\n\nconst COMPONENT_NAME = 'ElSelect'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  componentName: COMPONENT_NAME,\n  components: {\n    ElInput,\n    ElSelectMenu,\n    ElOption,\n    ElOptions,\n    ElTag,\n    ElScrollbar,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside },\n  props: {\n    /**\n     * @description the name attribute of select input\n     */\n    name: String,\n    /**\n     * @description native input id\n     */\n    id: String,\n    /**\n     * @description binding value\n     */\n    modelValue: {\n      type: [Array, String, Number, Boolean, Object],\n      default: undefined,\n    },\n    /**\n     * @description the autocomplete attribute of select input\n     */\n    autocomplete: {\n      type: String,\n      default: 'off',\n    },\n    /**\n     * @description for non-filterable Select, this prop decides if the option menu pops up when the input is focused\n     */\n    automaticDropdown: Boolean,\n    /**\n     * @description size of Input\n     */\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    /**\n     * @description tooltip theme, built-in theme: `dark` / `light`\n     */\n    effect: {\n      type: String as PropType<'light' | 'dark' | string>,\n      default: 'light',\n    },\n    /**\n     * @description whether Select is disabled\n     */\n    disabled: Boolean,\n    /**\n     * @description whether select can be cleared\n     */\n    clearable: Boolean,\n    /**\n     * @description whether Select is filterable\n     */\n    filterable: Boolean,\n    /**\n     * @description whether creating new items is allowed. To use this, `filterable` must be true\n     */\n    allowCreate: Boolean,\n    /**\n     * @description whether Select is loading data from server\n     */\n    loading: Boolean,\n    /**\n     * @description custom class name for Select's dropdown\n     */\n    popperClass: {\n      type: String,\n      default: '',\n    },\n    /**\n     * @description [popper.js](https://popper.js.org/docs/v2/) parameters\n     */\n    popperOptions: {\n      type: Object as PropType<Partial<Options>>,\n      default: () => ({} as Partial<Options>),\n    },\n    /**\n     * @description whether options are loaded from server\n     */\n    remote: Boolean,\n    /**\n     * @description displayed text while loading data from server, default is 'Loading'\n     */\n    loadingText: String,\n    /**\n     * @description displayed text when no data matches the filtering query, you can also use slot `empty`, default is 'No matching data'\n     */\n    noMatchText: String,\n    /**\n     * @description displayed text when there is no options, you can also use slot `empty`, default is 'No data'\n     */\n    noDataText: String,\n    /**\n     * @description custom remote search method\n     */\n    remoteMethod: Function,\n    /**\n     * @description custom filter method\n     */\n    filterMethod: Function,\n    /**\n     * @description whether multiple-select is activated\n     */\n    multiple: Boolean,\n    /**\n     * @description maximum number of options user can select when `multiple` is `true`. No limit when set to 0\n     */\n    multipleLimit: {\n      type: Number,\n      default: 0,\n    },\n    /**\n     * @description placeholder, default is 'Select'\n     */\n    placeholder: {\n      type: String,\n    },\n    /**\n     * @description select first matching option on enter key. Use with `filterable` or `remote`\n     */\n    defaultFirstOption: Boolean,\n    /**\n     * @description when `multiple` and `filter` is true, whether to reserve current keyword after selecting an option\n     */\n    reserveKeyword: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * @description unique identity key name for value, required when value is an object\n     */\n    valueKey: {\n      type: String,\n      default: 'value',\n    },\n    /**\n     * @description whether to collapse tags to a text when multiple selecting\n     */\n    collapseTags: Boolean,\n    /**\n     * @description whether show all selected tags when mouse hover text of collapse-tags. To use this, `collapse-tags` must be true\n     */\n    collapseTagsTooltip: Boolean,\n    /**\n     * @description the max tags number to be shown. To use this, `collapse-tags` must be true\n     */\n    maxCollapseTags: {\n      type: Number,\n      default: 1,\n    },\n    /**\n     * @description whether select dropdown is teleported to the body\n     */\n    teleported: useTooltipContentProps.teleported,\n    /**\n     * @description when select dropdown is inactive and `persistent` is `false`, select dropdown will be destroyed\n     */\n    persistent: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * @description custom clear icon component\n     */\n    clearIcon: {\n      type: iconPropType,\n      default: CircleClose,\n    },\n    /**\n     * @description whether the width of the dropdown is the same as the input\n     */\n    fitInputWidth: Boolean,\n    /**\n     * @description custom suffix icon component\n     */\n    suffixIcon: {\n      type: iconPropType,\n      default: ArrowDown,\n    },\n    /**\n     * @description tag type\n     */\n    // eslint-disable-next-line vue/require-prop-types\n    tagType: { ...tagProps.type, default: 'info' },\n    /**\n     * @description whether to trigger form validation\n     */\n    validateEvent: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * @description in remote search method show suffix icon\n     */\n    remoteShowSuffix: Boolean,\n    /**\n     * @deprecated will be removed in version 2.4.0, please use override style scheme\n     */\n    suffixTransition: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * @description position of dropdown\n     */\n    placement: {\n      type: String,\n      values: placements,\n      default: 'bottom-start',\n    },\n    /**\n     * @description native input aria-label\n     */\n    ariaLabel: {\n      type: String,\n      default: undefined,\n    },\n  },\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n  ],\n\n  setup(props, ctx) {\n    const nsSelect = useNamespace('select')\n    const nsInput = useNamespace('input')\n    const { t } = useLocale()\n    const contentId = useId()\n    const states = useSelectStates(props)\n    const {\n      optionList,\n      optionsArray,\n      hoverOption,\n      selectSize,\n      readonly,\n      handleResize,\n      collapseTagSize,\n      debouncedOnInputChange,\n      debouncedQueryChange,\n      deletePrevTag,\n      deleteTag,\n      deleteSelected,\n      handleOptionSelect,\n      scrollToOption,\n      setSelected,\n      resetInputHeight,\n      managePlaceholder,\n      showClose,\n      selectDisabled,\n      iconComponent,\n      iconReverse,\n      showNewOption,\n      emptyText,\n      toggleLastOptionHitState,\n      resetInputState,\n      handleComposition,\n      onOptionCreate,\n      onOptionDestroy,\n      handleMenuEnter,\n      handleFocus,\n      focus,\n      blur,\n      handleBlur,\n      handleClearClick,\n      handleClose,\n      handleKeydownEscape,\n      toggleMenu,\n      selectOption,\n      getValueKey,\n      navigateOptions,\n      handleDeleteTooltipTag,\n      dropMenuVisible,\n\n      reference,\n      input,\n      iOSInput,\n      tooltipRef,\n      tagTooltipRef,\n      tags,\n      selectWrapper,\n      scrollbar,\n      queryChange,\n      groupQueryChange,\n      handleMouseEnter,\n      handleMouseLeave,\n      showTagList,\n      collapseTagList,\n      // computed style\n      selectTagsStyle,\n    } = useSelect(props, states, ctx)\n\n    const {\n      inputWidth,\n      selected,\n      inputLength,\n      filteredOptionsCount,\n      visible,\n      selectedLabel,\n      hoverIndex,\n      query,\n      inputHovering,\n      currentPlaceholder,\n      menuVisibleOnFocus,\n      isOnComposition,\n      options,\n      cachedOptions,\n      optionsCount,\n      prefixWidth,\n    } = toRefs(states)\n\n    const wrapperKls = computed(() => {\n      const classList = [nsSelect.b()]\n      const _selectSize = unref(selectSize)\n      if (_selectSize) {\n        classList.push(nsSelect.m(_selectSize))\n      }\n      if (props.disabled) {\n        classList.push(nsSelect.m('disabled'))\n      }\n      return classList\n    })\n\n    const tagsKls = computed(() => [\n      nsSelect.e('tags'),\n      nsSelect.is('disabled', unref(selectDisabled)),\n    ])\n\n    const tagWrapperKls = computed(() => [\n      nsSelect.b('tags-wrapper'),\n      { 'has-prefix': unref(prefixWidth) && unref(selected).length },\n    ])\n\n    const inputKls = computed(() => [\n      nsSelect.e('input'),\n      nsSelect.is(unref(selectSize)),\n      nsSelect.is('disabled', unref(selectDisabled)),\n    ])\n\n    const iOSInputKls = computed(() => [\n      nsSelect.e('input'),\n      nsSelect.is(unref(selectSize)),\n      nsSelect.em('input', 'iOS'),\n    ])\n\n    const scrollbarKls = computed(() => [\n      nsSelect.is(\n        'empty',\n        !props.allowCreate &&\n          Boolean(unref(query)) &&\n          unref(filteredOptionsCount) === 0\n      ),\n    ])\n\n    const tagTextStyle = computed(() => {\n      const maxWidth =\n        unref(inputWidth) > 123\n          ? unref(inputWidth) - 123\n          : unref(inputWidth) - 75\n      return { maxWidth: `${maxWidth}px` }\n    })\n\n    const inputStyle = computed(() => ({\n      marginLeft: `${unref(prefixWidth)}px`,\n      flexGrow: 1,\n      width: `${unref(inputLength) / (unref(inputWidth) - 32)}%`,\n      maxWidth: `${unref(inputWidth) - 42}px`,\n    }))\n\n    provide(\n      selectKey,\n      reactive({\n        props,\n        options,\n        optionsArray,\n        cachedOptions,\n        optionsCount,\n        filteredOptionsCount,\n        hoverIndex,\n        handleOptionSelect,\n        onOptionCreate,\n        onOptionDestroy,\n        selectWrapper,\n        selected,\n        setSelected,\n        queryChange,\n        groupQueryChange,\n      }) as unknown as SelectContext\n    )\n\n    onMounted(() => {\n      states.cachedPlaceHolder = currentPlaceholder.value =\n        props.placeholder || (() => t('el.select.placeholder'))\n      if (\n        props.multiple &&\n        Array.isArray(props.modelValue) &&\n        props.modelValue.length > 0\n      ) {\n        currentPlaceholder.value = ''\n      }\n      useResizeObserver(selectWrapper, handleResize)\n      if (props.remote && props.multiple) {\n        resetInputHeight()\n      }\n      nextTick(() => {\n        const refEl = reference.value && reference.value.$el\n        if (!refEl) return\n        inputWidth.value = refEl.getBoundingClientRect().width\n\n        if (ctx.slots.prefix) {\n          const prefix = refEl.querySelector(`.${nsInput.e('prefix')}`)\n          prefixWidth.value = Math.max(\n            prefix.getBoundingClientRect().width + 11,\n            30\n          )\n        }\n      })\n      setSelected()\n    })\n\n    if (props.multiple && !Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, [])\n    }\n    if (!props.multiple && Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, '')\n    }\n\n    const popperPaneRef = computed(() => {\n      return tooltipRef.value?.popperRef?.contentRef\n    })\n\n    const onOptionsRendered = (v) => {\n      optionList.value = v\n    }\n\n    return {\n      isIOS,\n      onOptionsRendered,\n      prefixWidth,\n      selectSize,\n      readonly,\n      handleResize,\n      collapseTagSize,\n      debouncedOnInputChange,\n      debouncedQueryChange,\n      deletePrevTag,\n      deleteTag,\n      handleDeleteTooltipTag,\n      deleteSelected,\n      handleOptionSelect,\n      scrollToOption,\n      inputWidth,\n      selected,\n      inputLength,\n      filteredOptionsCount,\n      visible,\n      selectedLabel,\n      hoverIndex,\n      query,\n      inputHovering,\n      currentPlaceholder,\n      menuVisibleOnFocus,\n      isOnComposition,\n      options,\n      resetInputHeight,\n      managePlaceholder,\n      showClose,\n      selectDisabled,\n      iconComponent,\n      iconReverse,\n      showNewOption,\n      emptyText,\n      toggleLastOptionHitState,\n      resetInputState,\n      handleComposition,\n      handleMenuEnter,\n      handleFocus,\n      focus,\n      blur,\n      handleBlur,\n      handleClearClick,\n      handleClose,\n      handleKeydownEscape,\n      toggleMenu,\n      selectOption,\n      getValueKey,\n      navigateOptions,\n      dropMenuVisible,\n\n      reference,\n      input,\n      iOSInput,\n      tooltipRef,\n      popperPaneRef,\n      tags,\n      selectWrapper,\n      scrollbar,\n\n      wrapperKls,\n      tagsKls,\n      tagWrapperKls,\n      inputKls,\n      iOSInputKls,\n      scrollbarKls,\n      selectTagsStyle,\n      nsSelect,\n      tagTextStyle,\n      inputStyle,\n      handleMouseEnter,\n      handleMouseLeave,\n      showTagList,\n      collapseTagList,\n      tagTooltipRef,\n      contentId,\n      hoverOption,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}