{"ast":null,"code":"import { defineComponent, computed, unref, reactive, toRefs, getCurrentInstance, onBeforeUnmount, nextTick, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, renderSlot, createElementVNode, toDisplayString, vShow } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { useOption } from './useOption.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useId } from '../../../hooks/use-id/index.mjs';\nconst _sfc_main = defineComponent({\n  name: \"ElOption\",\n  componentName: \"ElOption\",\n  props: {\n    value: {\n      required: true,\n      type: [String, Number, Boolean, Object]\n    },\n    label: [String, Number],\n    created: Boolean,\n    disabled: Boolean\n  },\n  setup(props) {\n    const ns = useNamespace(\"select\");\n    const id = useId();\n    const containerKls = computed(() => [ns.be(\"dropdown\", \"item\"), ns.is(\"disabled\", unref(isDisabled)), {\n      selected: unref(itemSelected),\n      hover: unref(hover)\n    }]);\n    const states = reactive({\n      index: -1,\n      groupDisabled: false,\n      visible: true,\n      hitState: false,\n      hover: false\n    });\n    const {\n      currentLabel,\n      itemSelected,\n      isDisabled,\n      select,\n      hoverItem\n    } = useOption(props, states);\n    const {\n      visible,\n      hover\n    } = toRefs(states);\n    const vm = getCurrentInstance().proxy;\n    select.onOptionCreate(vm);\n    onBeforeUnmount(() => {\n      const key = vm.value;\n      const {\n        selected\n      } = select;\n      const selectedOptions = select.props.multiple ? selected : [selected];\n      const doesSelected = selectedOptions.some(item => {\n        return item.value === vm.value;\n      });\n      nextTick(() => {\n        if (select.cachedOptions.get(key) === vm && !doesSelected) {\n          select.cachedOptions.delete(key);\n        }\n      });\n      select.onOptionDestroy(key, vm);\n    });\n    function selectOptionClick() {\n      if (props.disabled !== true && states.groupDisabled !== true) {\n        select.handleOptionSelect(vm);\n      }\n    }\n    return {\n      ns,\n      id,\n      containerKls,\n      currentLabel,\n      itemSelected,\n      isDisabled,\n      select,\n      hoverItem,\n      visible,\n      hover,\n      selectOptionClick,\n      states\n    };\n  }\n});\nconst _hoisted_1 = [\"id\", \"aria-disabled\", \"aria-selected\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return withDirectives((openBlock(), createElementBlock(\"li\", {\n    id: _ctx.id,\n    class: normalizeClass(_ctx.containerKls),\n    role: \"option\",\n    \"aria-disabled\": _ctx.isDisabled || void 0,\n    \"aria-selected\": _ctx.itemSelected,\n    onMouseenter: _cache[0] || (_cache[0] = (...args) => _ctx.hoverItem && _ctx.hoverItem(...args)),\n    onClick: _cache[1] || (_cache[1] = withModifiers((...args) => _ctx.selectOptionClick && _ctx.selectOptionClick(...args), [\"stop\"]))\n  }, [renderSlot(_ctx.$slots, \"default\", {}, () => [createElementVNode(\"span\", null, toDisplayString(_ctx.currentLabel), 1)])], 42, _hoisted_1)), [[vShow, _ctx.visible]]);\n}\nvar Option = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/select/src/option.vue\"]]);\nexport { Option as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","componentName","props","value","required","type","String","Number","Boolean","Object","label","created","disabled","setup","ns","useNamespace","id","useId","containerKls","computed","be","is","unref","isDisabled","selected","itemSelected","hover","states","reactive","index","groupDisabled","visible","hitState","currentLabel","select","hoverItem","useOption","toRefs","vm","getCurrentInstance","proxy","onOptionCreate","onBeforeUnmount","key","selectedOptions","multiple","doesSelected","some","item","nextTick","cachedOptions","get","delete","onOptionDestroy","selectOptionClick","handleOptionSelect","createElementBlock","_ctx","class","normalizeClass","role","onMouseenter","_cache","args","onClick","withModifiers","renderSlot","$slots","createElementVNode","toDisplayString"],"sources":["../../../../../../packages/components/select/src/option.vue"],"sourcesContent":["<template>\n  <li\n    v-show=\"visible\"\n    :id=\"id\"\n    :class=\"containerKls\"\n    role=\"option\"\n    :aria-disabled=\"isDisabled || undefined\"\n    :aria-selected=\"itemSelected\"\n    @mouseenter=\"hoverItem\"\n    @click.stop=\"selectOptionClick\"\n  >\n    <slot>\n      <span>{{ currentLabel }}</span>\n    </slot>\n  </li>\n</template>\n\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  nextTick,\n  onBeforeUnmount,\n  reactive,\n  toRefs,\n  unref,\n} from 'vue'\nimport { useId, useNamespace } from '@element-plus/hooks'\nimport { useOption } from './useOption'\nimport type { SelectOptionProxy } from './token'\n\nexport default defineComponent({\n  name: 'ElOption',\n  componentName: 'ElOption',\n\n  props: {\n    /**\n     * @description value of option\n     */\n    value: {\n      required: true,\n      type: [String, Number, Boolean, Object],\n    },\n    /**\n     * @description label of option, same as `value` if omitted\n     */\n    label: [String, Number],\n    created: Boolean,\n    /**\n     * @description whether option is disabled\n     */\n    disabled: Boolean,\n  },\n\n  setup(props) {\n    const ns = useNamespace('select')\n    const id = useId()\n\n    const containerKls = computed(() => [\n      ns.be('dropdown', 'item'),\n      ns.is('disabled', unref(isDisabled)),\n      {\n        selected: unref(itemSelected),\n        hover: unref(hover),\n      },\n    ])\n\n    const states = reactive({\n      index: -1,\n      groupDisabled: false,\n      visible: true,\n      hitState: false,\n      hover: false,\n    })\n\n    const { currentLabel, itemSelected, isDisabled, select, hoverItem } =\n      useOption(props, states)\n\n    const { visible, hover } = toRefs(states)\n\n    const vm = getCurrentInstance().proxy\n\n    select.onOptionCreate(vm as unknown as SelectOptionProxy)\n\n    onBeforeUnmount(() => {\n      const key = (vm as unknown as SelectOptionProxy).value\n      const { selected } = select\n      const selectedOptions = select.props.multiple ? selected : [selected]\n      const doesSelected = selectedOptions.some((item) => {\n        return item.value === (vm as unknown as SelectOptionProxy).value\n      })\n      // if option is not selected, remove it from cache\n      nextTick(() => {\n        if (select.cachedOptions.get(key) === vm && !doesSelected) {\n          select.cachedOptions.delete(key)\n        }\n      })\n      select.onOptionDestroy(key, vm)\n    })\n\n    function selectOptionClick() {\n      if (props.disabled !== true && states.groupDisabled !== true) {\n        select.handleOptionSelect(vm)\n      }\n    }\n\n    return {\n      ns,\n      id,\n      containerKls,\n      currentLabel,\n      itemSelected,\n      isDisabled,\n      select,\n      hoverItem,\n      visible,\n      hover,\n      selectOptionClick,\n      states,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}